@use "./vars.scss" as vars;
@use "sass:color";

$effect3D: 3px;
$amountHover: 8;
$amountActive: 20;

@mixin button() {
	&-button {
		background: vars.$primary;
		border: none;
		box-shadow: 0 $effect3D 0
			color.adjust(vars.$primary, $lightness: -1% * $amountActive);

		&:hover {
			background-color: color.adjust(
				vars.$primary,
				$lightness: -1% * $amountHover
			);
		}

		&:active {
			transform: translateY($effect3D);
			box-shadow: 0 0 0
				color.adjust(vars.$primary, $lightness: -1% * $amountHover);
		}

		&-outlined {
			color: white;
			background-color: rgba($color: white, $alpha: 0.04);
			box-shadow: none;

			&:hover {
				background-color: white;
				color: vars.$black;
			}

			&:active {
				transform: none;
				box-shadow: none;
			}
		}

		&.white {
			$amountActive: 50;
			background: white;

			box-shadow: 0 $effect3D 0
				color.adjust(vars.$primary, $lightness: -1% * $amountActive);

			&:hover {
				background-color: color.adjust(
					white,
					$lightness: -1% * $amountHover
				);
			}

			&:active {
				transform: translateY($effect3D);
				box-shadow: 0 0 0
					color.adjust(vars.$primary, $lightness: -1% * $amountActive);
			}
		}
	}
}

@mixin input() {
	&-inputtext {
		background-color: rgba($color: white, $alpha: 0.15);
		border: 2px solid transparent;
		color: white;

		&:hover {
			background-color: rgba($color: white, $alpha: 0.2);
		}

		&:focus {
			border-color: rgba($color: white, $alpha: 0.5);
		}
	}
}

@mixin message() {
	&-inline-message {
		padding: 0.6em 0.8em;
		color: white;

		svg path {
			fill: white;
		}
		&-error {
			background-color: #710b0b;
		}
		&-success {
			background-color: #366809;
		}
	}
}

@mixin multiselect() {
	&-multiselect {
		padding: 0 0.3rem;
		padding-right: 0.1em;
		background-color: rgba($color: white, $alpha: 0.05);

		&-label {
			align-items: center;
			display: flex;
			padding: 0;
			height: 40px;
		}

		&-item {
			padding: 0.4rem;
			border-radius: 0;
			margin: 0;

			.p-checkbox {
				padding: 0;

				.p-checkbox-box {
					position: absolute;
					top: -2px;
					left: 2px;
					border-radius: 0;
					border-color: rgba($color: white, $alpha: 0.05);
					background: rgba($color: white, $alpha: 0.05);
				}
			}

			&.p-highlight {
				color: vars.$primary;
				background-color: rgba($color: vars.$primary, $alpha: 0.05);

				.p-checkbox-box {
					border-color: vars.$primary;
					background: vars.$primary;
				}
			}
		}

		&-checkbox {
			padding: 0.1em;
		}

		&-token {
			background-color: rgba($color: white, $alpha: 0.05);
			border-radius: 0;
			padding: 0.2em 0.4em;
			margin-right: 0.3rem;
		}

		&-trigger {
			width: 2rem;
		}

		&-panel {
			padding: 0;
			background-color: #222223;
		}

		&-items {
			padding: 0;
		}

		&-header {
			display: none;
		}

		&:hover {
			background-color: rgba($color: white, $alpha: 0.2);
		}

		&:focus {
			border-color: rgba($color: white, $alpha: 0.5);
		}
	}
}

.p {
	&-component {
		box-sizing: border-box;
		border-radius: 0;
		border: none;
		padding: 0.6rem 0.8rem;

		&.p-password {
			padding: 0;

			&-input {
				width: 100%;
			}

			&-panel {
				background-color: #2d2d2e;
				padding: 0.7em 0.6em;
				font-size: 14px;
				line-height: 1.3;

				.p-password-meter[data-pc-section="meter"] {
					height: 4px;
					margin-bottom: 4px;
					background-color: #555555;

					.p-password-strength {
						&.weak {
							background-color: #fb2c36;
						}
						&.medium {
							background-color: #ffba26;
						}
						&.strong {
							background-color: #2d8a24;
						}
					}
				}
			}
		}

		&:focus {
			&.p-invalid {
				border: 2px solid #fb2c36;
			}
		}
		&.p-invalid {
			border: 2px solid #fb2c36;
		}
	}

	&-icon-field {
		width: 100%;

		.p-input-icon {
			top: 39%;
		}
	}

	@include button;
	@include input;
	@include message;
	@include multiselect;
}
